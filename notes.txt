########################################
                WORK NOTES
########################################

----- GENERAL -----
- Links to Bright/Dark Nebula Files
    - BRIGHT: https://cdsarc.cds.unistra.fr/viz-bin/cat/VII/9
    - DARK: https://cdsarc.cds.unistra.fr/viz-bin/cat/VII/7A

- Spatial cuts for the allwise catalog are still iffy
    - try to fiddle around some more

########################################
                TO DO
########################################
- Find python package to see if value is in polygon
- COMPLETE: Sample of AGN, not all redshifts, take sdss+DESI crossmatched agn and save those data
    - COMPLETE: save with z, zerr, flags, w1, w2
    - redshift vs uncertainty of redshift
    - cut to good reshift
        - histogram of W1 mags
        - histogram of redshift
        - get gaussian fits, sample from those gaussian
            - function to do these
- For each random ML model sed
    - redshift it
    - draw random mag from gaussian to anchor
    - do similar color adding to HOD galaxy color
- Look at Scikit Learn linear model package
    - LASSO, RIDGE, ELASTIC NET
    - find cross-validatioon of combination
- Write up emai labout TACC issues

########################################
                COMPLETE
########################################
- COMPLETE: Mid year check-in form for TIMESTEP
- COMPLETE: In run_pca.py, find outlier models/make histogram of errors for each spectra
- COMPLETE: made the new decoder network with correct inputs and outputs. Testing in progress
    - autoencoder.py, change the inputs to be the correct parameters, outputs to be an SED
        - Train to generate new SED if given new parameters
- COMPLETE: Run decoder with GPU, figure out CUDA
- COMPLETE: Plot out loss and accuracy functions
    - COMPLETE: Find what accuracy is defined as 
- COMPLETE: Plot color-color track with cos(i) for a model
    - COMPLETE: W2-W1, W3-W1 colors
- COMPLETE: Make random parameters space, uniform for all, and cos(i) not i
- COMPLETE: Run full new decoder on TACC
- COMPLETE: Test the new decoder and model for error percent
    - NOT VIABLE: maybe find some way to get a condfidence interval
    - COMPLETE: or do a similar error analysis to the PCA
    - COMPLETE: Test parameters not in original space
- COMPLETE: Run model training with optimal epochs
- COMPLETE: Investigate Robert's programs
    - COMPLETE: Run with already existing models

########################################
                PCA
########################################
----- FILES -----
- create_subset.py
    - Cuts the orignal model data file to only include a subset of the models
        - eg. Only models with Y=20
- run_pca.py
    - Runs a PCA analysis on the models, reconstructing the original with some error
        - Reconstruction multiplies matrix of weights (~1mil, 7), with PCA components (7,119)
            - This creates (~1mill, 119) matrix reconstruction of original SEDs
    - Also creates plots for analyzing error and compression as the number of components increases
    - Can also analyze individual spectra
- save_pca.py
    - Saves an hdf5 file with the weights, components, wavelengths, and means for reconstructing

########################################
                AUTOENCODER
########################################
----- FILES -----
- train_decoder.py
    - Using tensorflow + keras
    - Currently trains a neural network to replicate SEDs given the 6 input parameters
    - Takes the models_subset and trains on it using MSE to produce a model that should reproduce SEDs
    - Saves the model to model_decoder.keras, with checkpoints every epoch that improves saved to 
        model_checkpoints.keras

- test_decoder.py
    - Opens the saved model from train_decoder.py and loads the parameter set and true SEDs
    - Overplots the SED generated from the model to the real SED, using the testing data
    - Testing data is not used in training the model, so true generation without the real 
        parameters or SED ever interacting with the training.

########################################
                REGRESSION
########################################

- filters.py
    - Helper file for using the filters.hdf5 file

- find_colors.py 
    - Can find colors for any SED or set of SEDs 
    - Can generate SEDs using the machine learning model with uniformly random parameters 
    - Can create a color track for a given set of parameters, with i values from 0 to 90

- 2dhist.py 
    - Plotting for the 2-D histgram and color tracks